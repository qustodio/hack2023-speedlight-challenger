import b from"expiry-map";import{v4 as T}from"uuid";import p from"node-fetch";import{createParser as S}from"eventsource-parser";async function u(i,s){let{onMessage:e,...r}=s,t=await p(i,r),n=S(o=>{o.type==="event"&&e(o.data)});t.body.on("readable",()=>{let o;for(;(o=t.body.read())!==null;)n.feed(o.toString())})}import{remark as x}from"remark";import E from"strip-markdown";function l(i){return x().use(E).processSync(i??"").toString()}var _="accessToken",v="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36",w=class{constructor(s){this._accessTokenCache=new b(10*1e3);let{sessionToken:e,markdown:r=!0,apiBaseUrl:t="https://chat.openai.com/api",backendApiBaseUrl:n="https://chat.openai.com/backend-api",userAgent:o=v}=s;if(this._sessionToken=e,this._markdown=!!r,this._apiBaseUrl=t,this._backendApiBaseUrl=n,this._userAgent=o,!this._sessionToken)throw new Error("ChatGPT invalid session token")}async getIsAuthenticated(){try{return await this.refreshAccessToken(),!0}catch{return!1}}async ensureAuth(){return await this.refreshAccessToken()}async sendMessage(s,e={}){let{conversationId:r=T(),onProgress:t}=e,n=await this.refreshAccessToken(),o={action:"next",messages:[{id:T(),role:"user",content:{content_type:"text",parts:[s]}}],model:"text-davinci-002-render",parent_message_id:r},y=`${this._backendApiBaseUrl}/conversation`,d="";return new Promise((A,f)=>{u(y,{method:"POST",headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json","user-agent":this._userAgent},body:JSON.stringify(o),onMessage:m=>{var g,k;if(m==="[DONE]")return A(d);try{let c=JSON.parse(m).message;if(c){let a=(k=(g=c==null?void 0:c.content)==null?void 0:g.parts)==null?void 0:k[0];a&&(this._markdown||(a=l(a)),d=a,t&&t(a))}}catch(h){console.warn("fetchSSE onMessage unexpected error",h),f(h)}}}).catch(f)})}async refreshAccessToken(){let s=this._accessTokenCache.get(_);if(s)return s;try{let e=await p("https://chat.openai.com/api/auth/session",{headers:{cookie:`__Secure-next-auth.session-token=${this._sessionToken}`,"user-agent":this._userAgent}}).then(n=>n.json()),r=e==null?void 0:e.accessToken;if(!r)throw new Error("Unauthorized");let t=e==null?void 0:e.error;if(t)throw t==="RefreshAccessTokenError"?new Error("session token has expired"):new Error(t);return this._accessTokenCache.set(_,r),r}catch(e){throw new Error(`ChatGPT failed to refresh auth token. ${e.toString()}`)}}};export{w as ChatGPTAPI,l as markdownToText};
//# sourceMappingURL=index.js.map